{"ast":null,"code":"var _jsxFileName = \"/Users/tarasveremchuk/Downloads/IT/GO-IT/REACT/goit-react-hw-01-components/src/components/friendList/FriendList.js\";\n// Компонент повинен приймати один проп friends – масив об'єктів друзів.\n// Компонент повинен створювати DOM наступної структури.\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FriendListItem = _ref => {\n  let {\n    id,\n    avatar,\n    name,\n    isOnline\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"item\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"status\",\n      children: isOnline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"avatar\",\n      src: avatar,\n      alt: \"User avatar\",\n      width: \"48\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"name\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FriendListItem;\nexport default function FriendList(friends) {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"friend-list\",\n    children: friends.map(friend => /*#__PURE__*/_jsxDEV(FriendListItem, {\n      avatar: friend.avatar,\n      name: friend.name,\n      isOnline: friend.isOnline,\n      id: friend.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c2 = FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.array\n};\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  isOnline: PropTypes.bool,\n  id: PropTypes.number\n}; // Опис компонента <FriendListItem>​\n// Компонент повинен приймати кілька пропів:\n// avatar - посилання на аватар\n// name - ім'я друга\n// isOnline - буль, що сигналізує про стан друга: в мережі або ні.\n// Залежно від пропа isOnline, повинен змінюватися колір фону span.status. Це можна зробити за допомогою різних CSS-класів або Styled Components.\n// Компонент повинен створювати DOM наступної структури.\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FriendListItem\");\n$RefreshReg$(_c2, \"FriendList\");","map":{"version":3,"sources":["/Users/tarasveremchuk/Downloads/IT/GO-IT/REACT/goit-react-hw-01-components/src/components/friendList/FriendList.js"],"names":["PropTypes","FriendListItem","id","avatar","name","isOnline","FriendList","friends","map","friend","propTypes","array","string","bool","number"],"mappings":";AAAA;AAEA;AACA,OAAOA,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,cAAc,GAAG,QAAoC;AAAA,MAAnC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,MAAN;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA;AAApB,GAAmC;AACzD,sBACE;AAAa,IAAA,SAAS,EAAC,MAAvB;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA,gBAA0BA;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,GAAG,EAAEF,MAA7B;AAAqC,MAAA,GAAG,EAAC,aAAzC;AAAuD,MAAA,KAAK,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,gBAAqBC;AAArB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,KAASF,EAAT;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CARD;;KAAMD,c;AAUN,eAAe,SAASK,UAAT,CAAoBC,OAApB,EAA6B;AAC1C,sBACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA,cACGA,OAAO,CAACC,GAAR,CAAYC,MAAM,iBACjB,QAAC,cAAD;AACE,MAAA,MAAM,EAAEA,MAAM,CAACN,MADjB;AAEE,MAAA,IAAI,EAAEM,MAAM,CAACL,IAFf;AAGE,MAAA,QAAQ,EAAEK,MAAM,CAACJ,QAHnB;AAIE,MAAA,EAAE,EAAEI,MAAM,CAACP;AAJb;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;MAbuBI,U;AAcxBA,UAAU,CAACI,SAAX,GAAuB;AACrBH,EAAAA,OAAO,EAAEP,SAAS,CAACW;AADE,CAAvB;AAIAV,cAAc,CAACS,SAAf,GAA2B;AACzBP,EAAAA,MAAM,EAAEH,SAAS,CAACY,MADO;AAEzBR,EAAAA,IAAI,EAAEJ,SAAS,CAACY,MAFS;AAGzBP,EAAAA,QAAQ,EAAEL,SAAS,CAACa,IAHK;AAIzBX,EAAAA,EAAE,EAAEF,SAAS,CAACc;AAJW,CAA3B,C,CAMA;AAEA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["// Компонент повинен приймати один проп friends – масив об'єктів друзів.\n\n// Компонент повинен створювати DOM наступної структури.\nimport PropTypes from 'prop-types';\n\nconst FriendListItem = ({ id, avatar, name, isOnline }) => {\n  return (\n    <li key={id} className=\"item\">\n      <span className=\"status\">{isOnline}</span>\n      <img className=\"avatar\" src={avatar} alt=\"User avatar\" width=\"48\" />\n      <p className=\"name\">{name}</p>\n    </li>\n  );\n};\n\nexport default function FriendList(friends) {\n  return (\n    <ul className=\"friend-list\">\n      {friends.map(friend => (\n        <FriendListItem\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n          id={friend.id}\n        ></FriendListItem>\n      ))}\n    </ul>\n  );\n}\nFriendList.propTypes = {\n  friends: PropTypes.array,\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  isOnline: PropTypes.bool,\n  id: PropTypes.number,\n};\n// Опис компонента <FriendListItem>​\n\n// Компонент повинен приймати кілька пропів:\n\n// avatar - посилання на аватар\n// name - ім'я друга\n// isOnline - буль, що сигналізує про стан друга: в мережі або ні.\n// Залежно від пропа isOnline, повинен змінюватися колір фону span.status. Це можна зробити за допомогою різних CSS-класів або Styled Components.\n\n// Компонент повинен створювати DOM наступної структури.\n"]},"metadata":{},"sourceType":"module"}