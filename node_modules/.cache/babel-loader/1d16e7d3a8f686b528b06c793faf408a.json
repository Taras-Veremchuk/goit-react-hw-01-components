{"ast":null,"code":"var _jsxFileName = \"/Users/tarasveremchuk/Downloads/IT/GO-IT/REACT/goit-react-hw-01-components/src/components/friendList/FriendList.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// Компонент повинен приймати один проп friends – масив об'єктів друзів.\n// Компонент повинен створювати DOM наступної структури.\nconst FriendList = friends => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    class: \"friend-list\",\n    children: friends.map(friend => /*#__PURE__*/_jsxDEV(FriendListItem, {\n      avatar: friend.avatar,\n      name: friend.name,\n      isOnline: friend.isOnline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}; // Опис компонента <FriendListItem>​\n// Компонент повинен приймати кілька пропів:\n// avatar - посилання на аватар\n// name - ім'я друга\n// isOnline - буль, що сигналізує про стан друга: в мережі або ні.\n// Залежно від пропа isOnline, повинен змінюватися колір фону span.status. Це можна зробити за допомогою різних CSS-класів або Styled Components.\n// Компонент повинен створювати DOM наступної структури.\n// <li class=\"item\">\n//   <span class=\"status\"></span>\n//   <img class=\"avatar\" src=\"\" alt=\"User avatar\" width=\"48\" />\n//   <p class=\"name\"></p>\n// </li>\n// Приклад використання​\n// import friends from 'path/to/friends.json';\n// <FriendList friends={friends} />;\n\n\n_c = FriendList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["/Users/tarasveremchuk/Downloads/IT/GO-IT/REACT/goit-react-hw-01-components/src/components/friendList/FriendList.js"],"names":["FriendList","friends","map","friend","avatar","name","isOnline"],"mappings":";;;AAAA;AAEA;AACA,MAAMA,UAAU,GAAGC,OAAO,IAAI;AAC5B,sBACE;AAAI,IAAA,KAAK,EAAC,aAAV;AAAA,cACGA,OAAO,CAACC,GAAR,CAAYC,MAAM,iBACjB,QAAC,cAAD;AACE,MAAA,MAAM,EAAEA,MAAM,CAACC,MADjB;AAEE,MAAA,IAAI,EAAED,MAAM,CAACE,IAFf;AAGE,MAAA,QAAQ,EAAEF,MAAM,CAACG;AAHnB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAZD,C,CAcA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;;;KAnCMN,U","sourcesContent":["// Компонент повинен приймати один проп friends – масив об'єктів друзів.\n\n// Компонент повинен створювати DOM наступної структури.\nconst FriendList = friends => {\n  return (\n    <ul class=\"friend-list\">\n      {friends.map(friend => (\n        <FriendListItem\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n        ></FriendListItem>\n      ))}\n    </ul>\n  );\n};\n\n// Опис компонента <FriendListItem>​\n\n// Компонент повинен приймати кілька пропів:\n\n// avatar - посилання на аватар\n// name - ім'я друга\n// isOnline - буль, що сигналізує про стан друга: в мережі або ні.\n// Залежно від пропа isOnline, повинен змінюватися колір фону span.status. Це можна зробити за допомогою різних CSS-класів або Styled Components.\n\n// Компонент повинен створювати DOM наступної структури.\n\n// <li class=\"item\">\n//   <span class=\"status\"></span>\n//   <img class=\"avatar\" src=\"\" alt=\"User avatar\" width=\"48\" />\n//   <p class=\"name\"></p>\n// </li>\n\n// Приклад використання​\n\n// import friends from 'path/to/friends.json';\n\n// <FriendList friends={friends} />;\n"]},"metadata":{},"sourceType":"module"}